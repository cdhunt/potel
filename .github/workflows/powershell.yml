name: PowerShell

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [windows-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Run PSScriptAnalyzer
        uses: microsoft/psscriptanalyzer-action@6b2948b1944407914a58661c49941824d149734f
        with:
          # Check https://github.com/microsoft/action-psscriptanalyzer for more info about the options.
          # The below set up runs PSScriptAnalyzer to your entire repository and runs some basic security rules.
          path: .\src
          recurse: true
          # Include your own basic security rules. Removing this option will run all the rules
          includeRule: '"PSAvoidGlobalAliases", "PSAvoidUsingConvertToSecureStringWithPlainText"'
          output: results.sarif

      # Upload the SARIF file generated in the previous step
      - name: Upload SARIF results file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: results.sarif

      - name: Build
        shell: pwsh
        run: ./build.ps1 build -Revision ($env:GITHUB_RUN_ID % 7170539256)

      - name: Store build output
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            publish
          retention-days: 1

  test:
    permissions:
      contents: read # for actions/checkout to fetch code
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    name: Test
    needs: Build
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/powershell:${{ matrix.pwshv }}-ubuntu-22.04
    strategy:
      matrix:
        pwshv: ['7.3','7.4']

    steps:
      - uses: actions/checkout@v4

      - name: Download build output
        uses: actions/download-artifact@v3
        with:
          name: build
          path: publish

      - name: Test
        shell: pwsh
        run: ./build.ps1 test
